// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    Register(in=in,load=load1,out=temp1);
    Register(in=in,load=load2,out=temp2);
    Register(in=in,load=load3,out=temp3);
    Register(in=in,load=load4,out=temp4);
    Register(in=in,load=load5,out=temp5);
    Register(in=in,load=load6,out=temp6);
    Register(in=in,load=load7,out=temp7);
    Register(in=in,load=load8,out=temp8);
    Mux8Way16(a=temp1, b=temp2, c=temp3, d=temp4, e=temp5, f=temp6, g=temp7, h=temp8, sel=address, out=out);
}