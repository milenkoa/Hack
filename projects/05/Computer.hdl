// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    // Put your code here:
    CPU(inM=dataBusIn,         // M value input  (M = contents of RAM[A])
        instruction=instructionBus, // Instruction for execution
        reset=reset,     // Signals whether to re-start the current
                         // program (reset==1) or continue executing
                         // the current program (reset==0).
        outM=dataBusOut,        // M value output
        writeM=writeMSignal,          // Write to M? 
        addressM=addressBus,    // Address in data memory (of M)
        pc=fetchInstruction);          // address of next instruction);
    //Instruction memory
    ROM32K(address=fetchInstruction, out=instructionBus);
    // Data memory:
    Memory(in=dataBusOut, load=writeMSignal, address=addressBus, out=dataBusIn);
}
